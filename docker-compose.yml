version: '3.8'

services:
  userapi:
    build:
      context: .  # The root of your project
      dockerfile: UserApi/Dockerfile  # Path to the Dockerfile for the UserApi service
    container_name: userapi-container
    ports:
      - "8080:8080"  # Expose the UserApi web application on port 8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=mssql;Database=UserApiDb;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True;
      - ConnectionStrings__IncidentConnection=Server=mssql;Database=IncidentDb;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True;
      - RedisConnection=redis  # Redis connection string
    depends_on:
      mssql:
        condition: service_healthy  # Wait for mssql to be healthy before starting userapi
      redis: 
        condition: service_started  # Ensure Redis starts as well
    networks:
      - backend

  webapp:
    build:
      context: .  # Root of your project
      dockerfile: WebApp/Dockerfile  # Path to the Dockerfile for WebApp
    container_name: webapp-container
    ports:
      - "8081:8080"  # Expose the WebApp web application on port 8081
    depends_on:
      - userapi
    networks:
      - backend

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong!Passw0rd
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD", "sqlcmd", "-U", "sa", "-P", "YourStrong!Passw0rd", "-Q", "SELECT 1"]
      interval: 10s
      retries: 5
    networks:
      - backend

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend

networks:
  backend:
    driver: bridge
